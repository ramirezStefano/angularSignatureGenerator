{"ast":null,"code":"import $9IrjX$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { forwardRef as $9IrjX$forwardRef, Children as $9IrjX$Children, isValidElement as $9IrjX$isValidElement, createElement as $9IrjX$createElement, cloneElement as $9IrjX$cloneElement, Fragment as $9IrjX$Fragment } from \"react\";\nimport { composeRefs as $9IrjX$composeRefs } from \"@radix-ui/react-compose-refs\";\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\nconst $5e63c961fc1ce211$export$8c6ed5c666ac1360 = /*#__PURE__*/$9IrjX$forwardRef((props, forwardedRef) => {\n  const {\n    children: children,\n    ...slotProps\n  } = props;\n  const childrenArray = $9IrjX$Children.toArray(children);\n  const slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map(child => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if ($9IrjX$Children.count(newElement) > 1) return $9IrjX$Children.only(null);\n        return /*#__PURE__*/$9IrjX$isValidElement(newElement) ? newElement.props.children : null;\n      } else return child;\n    });\n    return /*#__PURE__*/$9IrjX$createElement($5e63c961fc1ce211$var$SlotClone, $9IrjX$babelruntimehelpersesmextends({}, slotProps, {\n      ref: forwardedRef\n    }), /*#__PURE__*/$9IrjX$isValidElement(newElement) ? /*#__PURE__*/$9IrjX$cloneElement(newElement, undefined, newChildren) : null);\n  }\n  return /*#__PURE__*/$9IrjX$createElement($5e63c961fc1ce211$var$SlotClone, $9IrjX$babelruntimehelpersesmextends({}, slotProps, {\n    ref: forwardedRef\n  }), children);\n});\n$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = 'Slot';\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\nconst $5e63c961fc1ce211$var$SlotClone = /*#__PURE__*/$9IrjX$forwardRef((props, forwardedRef) => {\n  const {\n    children: children,\n    ...slotProps\n  } = props;\n  if ( /*#__PURE__*/$9IrjX$isValidElement(children)) return /*#__PURE__*/$9IrjX$cloneElement(children, {\n    ...$5e63c961fc1ce211$var$mergeProps(slotProps, children.props),\n    ref: forwardedRef ? $9IrjX$composeRefs(forwardedRef, children.ref) : children.ref\n  });\n  return $9IrjX$Children.count(children) > 1 ? $9IrjX$Children.only(null) : null;\n});\n$5e63c961fc1ce211$var$SlotClone.displayName = 'SlotClone';\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\nconst $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({\n  children: children\n}) => {\n  return /*#__PURE__*/$9IrjX$createElement($9IrjX$Fragment, null, children);\n};\n/* ---------------------------------------------------------------------------------------------- */\nfunction $5e63c961fc1ce211$var$isSlottable(child) {\n  return /*#__PURE__*/$9IrjX$isValidElement(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;\n}\nfunction $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {\n  // all child props should override\n  const overrideProps = {\n    ...childProps\n  };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) overrideProps[propName] = (...args) => {\n        childPropValue(...args);\n        slotPropValue(...args);\n      };else if (slotPropValue) overrideProps[propName] = slotPropValue;\n    } else if (propName === 'style') overrideProps[propName] = {\n      ...slotPropValue,\n      ...childPropValue\n    };else if (propName === 'className') overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n  }\n  return {\n    ...slotProps,\n    ...overrideProps\n  };\n}\nconst $5e63c961fc1ce211$export$be92b6f5f03c0fe9 = $5e63c961fc1ce211$export$8c6ed5c666ac1360;\nexport { $5e63c961fc1ce211$export$8c6ed5c666ac1360 as Slot, $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 as Slottable, $5e63c961fc1ce211$export$be92b6f5f03c0fe9 as Root };\n//# sourceMappingURL=index.mjs.map","map":{"version":3,"names":["$9IrjX$babelruntimehelpersesmextends","forwardRef","$9IrjX$forwardRef","Children","$9IrjX$Children","isValidElement","$9IrjX$isValidElement","createElement","$9IrjX$createElement","cloneElement","$9IrjX$cloneElement","Fragment","$9IrjX$Fragment","composeRefs","$9IrjX$composeRefs","$5e63c961fc1ce211$export$8c6ed5c666ac1360","props","forwardedRef","children","slotProps","childrenArray","toArray","slottable","find","$5e63c961fc1ce211$var$isSlottable","newElement","newChildren","map","child","count","only","$5e63c961fc1ce211$var$SlotClone","ref","undefined","displayName","$5e63c961fc1ce211$var$mergeProps","$5e63c961fc1ce211$export$d9f1ccf0bdb05d45","type","childProps","overrideProps","propName","slotPropValue","childPropValue","isHandler","test","args","filter","Boolean","join","$5e63c961fc1ce211$export$be92b6f5f03c0fe9","Slot","Slottable","Root"],"sources":["/Users/stefanoramirez/Documents/angularSignatureGenerator/node_modules/@radix-ui/react-slot/dist/index.mjs"],"sourcesContent":["import $9IrjX$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport {forwardRef as $9IrjX$forwardRef, Children as $9IrjX$Children, isValidElement as $9IrjX$isValidElement, createElement as $9IrjX$createElement, cloneElement as $9IrjX$cloneElement, Fragment as $9IrjX$Fragment} from \"react\";\nimport {composeRefs as $9IrjX$composeRefs} from \"@radix-ui/react-compose-refs\";\n\n\n\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$export$8c6ed5c666ac1360 = /*#__PURE__*/ $9IrjX$forwardRef((props, forwardedRef)=>{\n    const { children: children , ...slotProps } = props;\n    const childrenArray = $9IrjX$Children.toArray(children);\n    const slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);\n    if (slottable) {\n        // the new element to render is the one passed as a child of `Slottable`\n        const newElement = slottable.props.children;\n        const newChildren = childrenArray.map((child)=>{\n            if (child === slottable) {\n                // because the new element will be the one rendered, we are only interested\n                // in grabbing its children (`newElement.props.children`)\n                if ($9IrjX$Children.count(newElement) > 1) return $9IrjX$Children.only(null);\n                return /*#__PURE__*/ $9IrjX$isValidElement(newElement) ? newElement.props.children : null;\n            } else return child;\n        });\n        return /*#__PURE__*/ $9IrjX$createElement($5e63c961fc1ce211$var$SlotClone, $9IrjX$babelruntimehelpersesmextends({}, slotProps, {\n            ref: forwardedRef\n        }), /*#__PURE__*/ $9IrjX$isValidElement(newElement) ? /*#__PURE__*/ $9IrjX$cloneElement(newElement, undefined, newChildren) : null);\n    }\n    return /*#__PURE__*/ $9IrjX$createElement($5e63c961fc1ce211$var$SlotClone, $9IrjX$babelruntimehelpersesmextends({}, slotProps, {\n        ref: forwardedRef\n    }), children);\n});\n$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = 'Slot';\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$var$SlotClone = /*#__PURE__*/ $9IrjX$forwardRef((props, forwardedRef)=>{\n    const { children: children , ...slotProps } = props;\n    if (/*#__PURE__*/ $9IrjX$isValidElement(children)) return /*#__PURE__*/ $9IrjX$cloneElement(children, {\n        ...$5e63c961fc1ce211$var$mergeProps(slotProps, children.props),\n        ref: forwardedRef ? $9IrjX$composeRefs(forwardedRef, children.ref) : children.ref\n    });\n    return $9IrjX$Children.count(children) > 1 ? $9IrjX$Children.only(null) : null;\n});\n$5e63c961fc1ce211$var$SlotClone.displayName = 'SlotClone';\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({ children: children  })=>{\n    return /*#__PURE__*/ $9IrjX$createElement($9IrjX$Fragment, null, children);\n};\n/* ---------------------------------------------------------------------------------------------- */ function $5e63c961fc1ce211$var$isSlottable(child) {\n    return /*#__PURE__*/ $9IrjX$isValidElement(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;\n}\nfunction $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {\n    // all child props should override\n    const overrideProps = {\n        ...childProps\n    };\n    for(const propName in childProps){\n        const slotPropValue = slotProps[propName];\n        const childPropValue = childProps[propName];\n        const isHandler = /^on[A-Z]/.test(propName);\n        if (isHandler) {\n            // if the handler exists on both, we compose them\n            if (slotPropValue && childPropValue) overrideProps[propName] = (...args)=>{\n                childPropValue(...args);\n                slotPropValue(...args);\n            };\n            else if (slotPropValue) overrideProps[propName] = slotPropValue;\n        } else if (propName === 'style') overrideProps[propName] = {\n            ...slotPropValue,\n            ...childPropValue\n        };\n        else if (propName === 'className') overrideProps[propName] = [\n            slotPropValue,\n            childPropValue\n        ].filter(Boolean).join(' ');\n    }\n    return {\n        ...slotProps,\n        ...overrideProps\n    };\n}\nconst $5e63c961fc1ce211$export$be92b6f5f03c0fe9 = $5e63c961fc1ce211$export$8c6ed5c666ac1360;\n\n\n\n\nexport {$5e63c961fc1ce211$export$8c6ed5c666ac1360 as Slot, $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 as Slottable, $5e63c961fc1ce211$export$be92b6f5f03c0fe9 as Root};\n//# sourceMappingURL=index.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}